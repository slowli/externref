var searchIndex = new Map(JSON.parse('[\
["externref",{"t":"FETPFGPFGFPPNNNNNNNNNNNNNNNNNNNNXONNNNNNNNNNNNNNNNNNNNNOOCNNNNNNNNNNNNNNNNNNNNNNNNNNPGPGPFPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOO","n":["BitSlice","BitSliceBuilder","CUSTOM_SECTION_NAME","Export","Function","FunctionKind","Import","ReadError","ReadErrorKind","Resource","UnexpectedEof","Utf8","bit_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","count_ones","downcast_unchecked","drop","externref","externrefs","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","is_set","kind","name","processor","read_from_section","set_indices","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast_ref","Arg","Error","IncorrectGuard","Location","NoExport","Processor","Read","ReturnType","UnexpectedArity","UnexpectedCall","UnexpectedExportType","UnexpectedImportType","UnexpectedType","Wasm","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","process","process_bytes","set_drop_fn","set_ref_table","source","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","code_offset","code_offset","expected_arity","function_name","function_name","location","module","module","module","name","name","name","real_arity","real_type"],"q":[[0,"externref"],[84,"externref::processor"],[133,"externref::processor::Error"],[147,"externref::signature"],[148,"externref::error"],[149,"core::fmt"],[150,"core::result"],[151,"core::iter::traits::iterator"],[152,"core::error"],[153,"core::option"],[154,"alloc::string"],[155,"core::any"],[156,"externref::processor::error"],[157,"walrus::module"],[158,"alloc::vec"],[159,"core::convert"],[160,"externref_macro"]],"i":[0,0,12,11,0,0,11,0,0,0,7,7,1,7,10,1,11,12,6,7,10,1,11,12,6,1,1,1,1,1,6,6,0,12,7,7,10,10,1,11,12,6,7,10,1,11,12,6,7,10,1,11,12,6,1,12,12,0,12,1,10,1,7,10,7,10,1,11,12,6,7,10,1,11,12,6,7,10,1,11,12,6,6,6,25,0,26,0,26,0,26,25,26,26,26,26,26,26,25,26,24,25,26,24,24,25,25,26,26,24,25,26,26,24,25,26,24,24,24,24,24,26,25,26,25,26,24,25,26,24,25,26,24,31,32,33,31,32,34,35,33,34,35,33,34,33,34],"f":"````````````{{{d{b}}}f}{{{d{c}}}{{d{e}}}{}{}}00000{{{d{hc}}}{{d{he}}}{}{}}00000{{{d{b}}}b}{{{d{c}}{d{he}}}j{}{}}{{{d{c}}}j{}}05{{{l{j}}}{{l{c}}}{}}{{{d{h{l{c}}}}}j{}}``{{{d{n}}{d{hA`}}}Ab}0{{{d{Ad}}{d{hA`}}}Ab}0{{{d{b}}{d{hA`}}}Ab}{{{d{Af}}{d{hA`}}}Ab}{{{d{Ah}}{d{hA`}}}Ab}{{{d{{l{c}}}}{d{hA`}}}AbAj}{cc{}}00000{ce{}{}}00000{{{d{b}}f}Al}```{{{d{h{d{{B`{An}}}}}}}{{Bb{AhAd}}}}{{{d{b}}}{{`{{Bf{}{{Bd{f}}}}}}}}{{{d{Ad}}}{{Bj{{d{Bh}}}}}}{{{d{c}}}e{}{}}{{{d{c}}}Bl{}}0{c{{Bb{e}}}{}{}}00000000000{{{d{c}}}Bn{}}00000{{{l{c}}}{{l{j}}}{}}{{{d{{l{c}}}}}{{d{{l{j}}}}}{}}``````````````{{{d{c}}}{{d{e}}}{}{}}00{{{d{hc}}}{{d{he}}}{}{}}00{{}C`}{{{d{Cb}}{d{hA`}}}Ab}0{{{d{Cd}}{d{hA`}}}Ab}0{{{d{C`}}{d{hA`}}}Ab}{cc{}}0{AdCd}1{ce{}{}}00{{{d{C`}}{d{hCf}}}{{Bb{jCd}}}}{{{d{C`}}{d{{B`{An}}}}}{{Bb{{Ch{An}}Cd}}}}{{{d{hC`}}{d{Cj}}{d{Cj}}}{{d{hC`}}}}{{{d{hC`}}c}{{d{hC`}}}{{Cl{{Bj{{d{Cj}}}}}}}}{{{d{Cd}}}{{Bj{{d{Bh}}}}}}{{{d{c}}}Bl{}}0{c{{Bb{e}}}{}{}}00000{{{d{c}}}Bn{}}00``````````````","D":"If","p":[[5,"BitSlice",0,147],[1,"reference"],[1,"usize"],[0,"mut"],[1,"unit"],[5,"Resource",0],[6,"ReadErrorKind",0,148],[5,"Formatter",149],[8,"Result",149],[5,"ReadError",0,148],[6,"FunctionKind",0,147],[5,"Function",0,147],[10,"Debug",149],[1,"bool"],[1,"u8"],[1,"slice"],[6,"Result",150],[17,"Item"],[10,"Iterator",151],[10,"Error",152],[6,"Option",153],[5,"String",154],[5,"TypeId",155],[5,"Processor",84],[6,"Location",84,156],[6,"Error",84,156],[5,"Module",157],[5,"Vec",158],[1,"str"],[10,"Into",159],[15,"IncorrectGuard",133],[15,"UnexpectedCall",133],[15,"UnexpectedArity",133],[15,"UnexpectedType",133],[15,"UnexpectedImportType",133]],"r":[[0,147],[1,147],[4,147],[5,147],[7,148],[8,148],[32,160],[85,156],[87,156]],"b":[[34,"impl-Display-for-ReadErrorKind"],[35,"impl-Debug-for-ReadErrorKind"],[36,"impl-Display-for-ReadError"],[37,"impl-Debug-for-ReadError"],[105,"impl-Display-for-Location"],[106,"impl-Debug-for-Location"],[107,"impl-Debug-for-Error"],[108,"impl-Display-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEgACAACAAAADgAPACAAAAAjAAcAPQAVAGMACwBxAAAAegALAA=="}],\
["externref_macro",{"t":"X","n":["externref"],"q":[[0,"externref_macro"]],"i":[0],"f":"`","D":"d","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
